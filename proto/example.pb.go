// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: example.proto

package example

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetDeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeInfoRequest) Reset() {
	*x = GetDeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeInfoRequest) ProtoMessage() {}

func (x *GetDeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDeInfoRequest) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

func (x *GetDeInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

type DeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ZoneId    int32    `protobuf:"varint,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	EmpStatus string   `protobuf:"bytes,4,opt,name=empStatus,proto3" json:"empStatus,omitempty"`
	DeType    string   `protobuf:"bytes,5,opt,name=deType,proto3" json:"deType,omitempty"`
	InShift   bool     `protobuf:"varint,6,opt,name=inShift,proto3" json:"inShift,omitempty"`
	IsBicycle bool     `protobuf:"varint,7,opt,name=isBicycle,proto3" json:"isBicycle,omitempty"`
	Adress    *Address `protobuf:"bytes,8,opt,name=adress,proto3" json:"adress,omitempty"`
}

func (x *DeInfo) Reset() {
	*x = DeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeInfo) ProtoMessage() {}

func (x *DeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeInfo.ProtoReflect.Descriptor instead.
func (*DeInfo) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{2}
}

func (x *DeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeInfo) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *DeInfo) GetEmpStatus() string {
	if x != nil {
		return x.EmpStatus
	}
	return ""
}

func (x *DeInfo) GetDeType() string {
	if x != nil {
		return x.DeType
	}
	return ""
}

func (x *DeInfo) GetInShift() bool {
	if x != nil {
		return x.InShift
	}
	return false
}

func (x *DeInfo) GetIsBicycle() bool {
	if x != nil {
		return x.IsBicycle
	}
	return false
}

func (x *DeInfo) GetAdress() *Address {
	if x != nil {
		return x.Adress
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address1 string `protobuf:"bytes,1,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2 string `protobuf:"bytes,2,opt,name=address2,proto3" json:"address2,omitempty"`
	City     string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Address) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0xdc, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x69,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42,
	0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x61, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x55, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x32, 0xa9, 0x03, 0x0a, 0x0d, 0x44, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x34, 0x0a, 0x07, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x0c, 0x41, 0x64, 0x64, 0x20, 0x61, 0x20, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1b, 0x41,
	0x64, 0x64, 0x20, 0x61, 0x20, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x0e, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x64, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x92, 0x41, 0x36, 0x0a, 0x07, 0x44, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x44, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x44, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x30, 0x01, 0x12, 0x8d, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x64, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x31,
	0x0a, 0x06, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x44,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x44, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x30, 0x01, 0x42, 0x7b, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x92, 0x41, 0x51, 0x12,
	0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x72, 0x45, 0x0a, 0x23, 0x67, 0x52, 0x50,
	0x43, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x20, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData = file_example_proto_rawDesc
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_proto_rawDescData)
	})
	return file_example_proto_rawDescData
}

var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_example_proto_goTypes = []interface{}{
	(*GetDeInfoRequest)(nil), // 0: example.GetDeInfoRequest
	(*Empty)(nil),            // 1: example.Empty
	(*DeInfo)(nil),           // 2: example.DeInfo
	(*Address)(nil),          // 3: example.Address
}
var file_example_proto_depIdxs = []int32{
	3, // 0: example.DeInfo.adress:type_name -> example.Address
	2, // 1: example.DeInfoService.AddDeInfo:input_type -> example.DeInfo
	1, // 2: example.DeInfoService.ListDeInfos:input_type -> example.Empty
	0, // 3: example.DeInfoService.GetDeInfo:input_type -> example.GetDeInfoRequest
	2, // 4: example.DeInfoService.AddDeInfo:output_type -> example.DeInfo
	2, // 5: example.DeInfoService.ListDeInfos:output_type -> example.DeInfo
	2, // 6: example.DeInfoService.GetDeInfo:output_type -> example.DeInfo
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_rawDesc = nil
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeInfoServiceClient is the client API for DeInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeInfoServiceClient interface {
	AddDeInfo(ctx context.Context, in *DeInfo, opts ...grpc.CallOption) (*DeInfo, error)
	ListDeInfos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (DeInfoService_ListDeInfosClient, error)
	GetDeInfo(ctx context.Context, in *GetDeInfoRequest, opts ...grpc.CallOption) (DeInfoService_GetDeInfoClient, error)
}

type deInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeInfoServiceClient(cc grpc.ClientConnInterface) DeInfoServiceClient {
	return &deInfoServiceClient{cc}
}

func (c *deInfoServiceClient) AddDeInfo(ctx context.Context, in *DeInfo, opts ...grpc.CallOption) (*DeInfo, error) {
	out := new(DeInfo)
	err := c.cc.Invoke(ctx, "/example.DeInfoService/AddDeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deInfoServiceClient) ListDeInfos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (DeInfoService_ListDeInfosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeInfoService_serviceDesc.Streams[0], "/example.DeInfoService/ListDeInfos", opts...)
	if err != nil {
		return nil, err
	}
	x := &deInfoServiceListDeInfosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeInfoService_ListDeInfosClient interface {
	Recv() (*DeInfo, error)
	grpc.ClientStream
}

type deInfoServiceListDeInfosClient struct {
	grpc.ClientStream
}

func (x *deInfoServiceListDeInfosClient) Recv() (*DeInfo, error) {
	m := new(DeInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deInfoServiceClient) GetDeInfo(ctx context.Context, in *GetDeInfoRequest, opts ...grpc.CallOption) (DeInfoService_GetDeInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeInfoService_serviceDesc.Streams[1], "/example.DeInfoService/GetDeInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &deInfoServiceGetDeInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeInfoService_GetDeInfoClient interface {
	Recv() (*DeInfo, error)
	grpc.ClientStream
}

type deInfoServiceGetDeInfoClient struct {
	grpc.ClientStream
}

func (x *deInfoServiceGetDeInfoClient) Recv() (*DeInfo, error) {
	m := new(DeInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeInfoServiceServer is the server API for DeInfoService service.
type DeInfoServiceServer interface {
	AddDeInfo(context.Context, *DeInfo) (*DeInfo, error)
	ListDeInfos(*Empty, DeInfoService_ListDeInfosServer) error
	GetDeInfo(*GetDeInfoRequest, DeInfoService_GetDeInfoServer) error
}

// UnimplementedDeInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeInfoServiceServer struct {
}

func (*UnimplementedDeInfoServiceServer) AddDeInfo(context.Context, *DeInfo) (*DeInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDeInfo not implemented")
}
func (*UnimplementedDeInfoServiceServer) ListDeInfos(*Empty, DeInfoService_ListDeInfosServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDeInfos not implemented")
}
func (*UnimplementedDeInfoServiceServer) GetDeInfo(*GetDeInfoRequest, DeInfoService_GetDeInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDeInfo not implemented")
}

func RegisterDeInfoServiceServer(s *grpc.Server, srv DeInfoServiceServer) {
	s.RegisterService(&_DeInfoService_serviceDesc, srv)
}

func _DeInfoService_AddDeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeInfoServiceServer).AddDeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.DeInfoService/AddDeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeInfoServiceServer).AddDeInfo(ctx, req.(*DeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeInfoService_ListDeInfos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeInfoServiceServer).ListDeInfos(m, &deInfoServiceListDeInfosServer{stream})
}

type DeInfoService_ListDeInfosServer interface {
	Send(*DeInfo) error
	grpc.ServerStream
}

type deInfoServiceListDeInfosServer struct {
	grpc.ServerStream
}

func (x *deInfoServiceListDeInfosServer) Send(m *DeInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _DeInfoService_GetDeInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDeInfoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeInfoServiceServer).GetDeInfo(m, &deInfoServiceGetDeInfoServer{stream})
}

type DeInfoService_GetDeInfoServer interface {
	Send(*DeInfo) error
	grpc.ServerStream
}

type deInfoServiceGetDeInfoServer struct {
	grpc.ServerStream
}

func (x *deInfoServiceGetDeInfoServer) Send(m *DeInfo) error {
	return x.ServerStream.SendMsg(m)
}

var _DeInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.DeInfoService",
	HandlerType: (*DeInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDeInfo",
			Handler:    _DeInfoService_AddDeInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListDeInfos",
			Handler:       _DeInfoService_ListDeInfos_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetDeInfo",
			Handler:       _DeInfoService_GetDeInfo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "example.proto",
}
